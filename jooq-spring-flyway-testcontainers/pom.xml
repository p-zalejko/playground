<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.3.5</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.gmail.pzalejko.jooq</groupId>
	<artifactId>example</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>example</name>
	<description>Demo project for Spring Boot</description>

	<properties>
		<java.version>23</java.version>
		<org.jooq.version>3.19.15</org.jooq.version>
		<properties-maven-plugin.version>1.0.0</properties-maven-plugin.version>
		<testcontainers.version>1.20.3</testcontainers.version>
		<flyway-core.version>10.20.1</flyway-core.version>
		<guava.version>33.2.1-jre</guava.version>
		<assertj-core.version>3.26.3</assertj-core.version>
		<groovy-maven-plugin.version>2.1.1</groovy-maven-plugin.version>
		<jooq.generator.testcontainers.version>1.19.0</jooq.generator.testcontainers.version>
		<postgresql.version>42.7.4</postgresql.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-jooq</artifactId>
		</dependency>
		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<version>${postgresql.version}</version>
		</dependency>
		<dependency>
			<groupId>org.flywaydb</groupId>
			<artifactId>flyway-core</artifactId>
			<version>${flyway-core.version}</version>
		</dependency>
		<dependency>
			<groupId>org.flywaydb</groupId>
			<artifactId>flyway-database-postgresql</artifactId>
			<version>${flyway-core.version}</version>
			<scope>runtime</scope>
		</dependency>

		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>${guava.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-testcontainers</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.testcontainers</groupId>
			<artifactId>junit-jupiter</artifactId>
			<version>${testcontainers.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.assertj</groupId>
			<artifactId>assertj-core</artifactId>
			<version>${assertj-core.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.testcontainers</groupId>
			<artifactId>postgresql</artifactId>
			<version>${testcontainers.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.testcontainers</groupId>
			<artifactId>testcontainers</artifactId>
			<version>${testcontainers.version}</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>properties-maven-plugin</artifactId>
				<version>${properties-maven-plugin.version}</version>
				<executions>
					<execution>
						<phase>initialize</phase>
						<goals>
							<goal>read-project-properties</goal>
						</goals>
						<configuration>
							<files>
								<file>src/main/resources/jooq-maven.properties</file>
							</files>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.codehaus.gmaven</groupId>
				<artifactId>groovy-maven-plugin</artifactId>
				<version>${groovy-maven-plugin.version}</version>
				<executions>
					<execution>
						<id>start-testcontainers</id>
						<phase>initialize</phase>
						<goals>
							<goal>execute</goal>
						</goals>
						<configuration>
							<source>
								db = new org.testcontainers.containers.PostgreSQLContainer("postgres:17-alpine")
										.withUsername("${db.username}")
										.withDatabaseName("postgres")
										.withPassword("${db.password}");

								db.start();
								project.properties.setProperty('db.url', db.getJdbcUrl());
							</source>
						</configuration>
					</execution>
				</executions>

				<dependencies>
					<dependency>
						<groupId>org.testcontainers</groupId>
						<artifactId>postgresql</artifactId>
						<version>${jooq.generator.testcontainers.version}</version>
					</dependency>
				</dependencies>
			</plugin>

			<plugin>
				<groupId>org.flywaydb</groupId>
				<artifactId>flyway-maven-plugin</artifactId>
				<version>${flyway-core.version}</version>
				<executions>
					<execution>
						<id>flyway-migrate</id>
						<phase>generate-sources</phase> <!-- Align with jOOQ phase -->
						<goals>
							<goal>migrate</goal>
						</goals>
						<configuration>
							<url>${db.url}</url>
							<user>${db.username}</user>
							<password>${db.password}</password>
							<schemas>
								<schema>dev</schema>
							</schemas>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.jooq</groupId>
				<artifactId>jooq-codegen-maven</artifactId>
				<version>${org.jooq.version}</version>

				<executions>
					<execution>
						<id>generate-jooq-classes</id>
						<phase>generate-sources</phase> <!-- Align with Flyway phase -->
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<jdbc>
								<driver>${db.driver}</driver>
								<url>${db.url}</url>
								<user>${db.username}</user>
								<password>${db.password}</password>
							</jdbc>
							<generator>
								<target>
									<packageName>com.gmail.pzalejko.joo.examle.db</packageName>
									<directory>src/main/java</directory>
								</target>
								<database>
									<includes>.*</includes>
									<inputSchema>${db.schema}</inputSchema>
								</database>
							</generator>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>